(()=>{"use strict";var e={569:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&n(t,e,r);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});var a=i(r(996)),u=function(){function e(e){this.nodeMapByUuid={},this.nodeMapByLabel={},this.activeNode=null,this.elem=e,this.rootNode=new a.default(e),this.build(e,this.rootNode),this.activateNode(this.rootNode)}return e.prototype.build=function(e,t){for(var r=0;r<e.children.length;r+=1){var n=e.children[r];if(a.default.hasNavTypeAttribute(n)){var o=new a.default(n,t);this.registerNode(o),o.type!==a.NavItemTypes.Item&&this.build(n,o)}else this.build(n,t)}},e.prototype.registerNode=function(e){this.nodeMapByUuid[e.uuid]=e,e.label&&(this.nodeMapByLabel[e.label]=e)},e.prototype.rebuild=function(){var e,t=null===(e=this.activeNode)||void 0===e?void 0:e.uuid;this.nodeMapByUuid={},this.nodeMapByLabel={},this.deactivateNode(),this.rootNode=new a.default(this.elem),this.build(this.elem,this.rootNode),this.activateNodeByUuid(t)},e.prototype.activateNodeByLabel=function(e){var t=this.nodeMapByLabel[e];this.activateNode(t)},e.prototype.activateNodeByUuid=function(e){var t=this.nodeMapByUuid[e];this.activateNode(t)},e.prototype.activateNode=function(e){var t,r,n;if(e&&e.uuid!==(null===(t=this.activeNode)||void 0===t?void 0:t.uuid))if(e.hasType(a.NavItemTypes.Item))null===(r=this.activeNode)||void 0===r||r.deactivate(),this.activeNode=e,null===(n=this.activeNode)||void 0===n||n.activate(),console.log(this.rootNode,this.activeNode);else{var o=e.getFirstChildNode();this.activateNode(o)}},e.prototype.deactivateNode=function(){var e;null===(e=this.activeNode)||void 0===e||e.deactivate(),this.activeNode=null},e.prototype.move=function(e,t,r){if(e&&e.parent){var n=e.parent,o=n.getChildNode(e.index+r);n.hasType(t)&&o?this.activateNode(o):this.move(n,t,r)}},e.prototype.up=function(){this.move(this.activeNode,a.NavItemTypes.Row,a.Offset.Prev)},e.prototype.down=function(){this.move(this.activeNode,a.NavItemTypes.Row,a.Offset.Next)},e.prototype.left=function(){this.move(this.activeNode,a.NavItemTypes.Column,a.Offset.Prev)},e.prototype.right=function(){this.move(this.activeNode,a.NavItemTypes.Column,a.Offset.Next)},e}();t.default=u},996:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Offset=t.NavItemDataAttrs=t.NavItemTypes=void 0;var n,o,i,a=r(614);!function(e){e.Row="row",e.Column="column",e.Item="item"}(n=t.NavItemTypes||(t.NavItemTypes={})),function(e){e.NavType="nav",e.NavLabel="navLabel",e.NavUuid="navUuid",e.ActiveNavItem="activeNavItem"}(o=t.NavItemDataAttrs||(t.NavItemDataAttrs={})),(i=t.Offset||(t.Offset={}))[i.Next=1]="Next",i[i.Prev=-1]="Prev";var u=function(){function e(e,t,r){void 0===t&&(t=null),void 0===r&&(r=0),this.elem=e,this.parent=t,this.index=r,this.children=[],t&&(this.index=t.children.length,t.children.push(this)),this.hasType(n.Item)&&(this.elem.tabIndex=-1),this.elem.dataset[o.NavUuid]||(this.elem.dataset[o.NavUuid]=a.v4())}return Object.defineProperty(e.prototype,"type",{get:function(){return this.elem.dataset[o.NavType]||null},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"uuid",{get:function(){return this.elem.dataset[o.NavUuid]},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"label",{get:function(){return this.elem.dataset[o.NavLabel]||null},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isActive",{get:function(){return Boolean(this.elem.dataset[o.ActiveNavItem])},enumerable:!1,configurable:!0}),e.prototype.hasType=function(e){return this.type===e},e.prototype.getChildNode=function(e){return this.children[e]||null},e.prototype.getFirstChildNode=function(){return this.getChildNode(0)},e.hasNavTypeAttribute=function(e){return Boolean(e.dataset[o.NavType])},e.prototype.activate=function(){this.isActive||this.type!==n.Item||(this.elem.dataset[o.ActiveNavItem]="true",this.elem.focus(),this.elem.scrollIntoView({block:"center",inline:"center",behavior:"smooth"}))},e.prototype.deactivate=function(){this.isActive&&(this.elem.blur(),delete this.elem.dataset[o.ActiveNavItem])},e}();t.default=u},124:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=n(r(569)),i=n(r(105)),a=n(r(522)),u=n(r(876)),s=function(){function e(){this.navTree=null,this.navTreeHtmlObserver=new i.default,this.navTreeClickObserver=new a.default,this.navTreeKeyPressObserver=new u.default}return e.prototype.observe=function(e){e.isEqualNode(this.navTree&&this.navTree.elem)||(this.navTree=new o.default(e),this.navTreeHtmlObserver.watch(this.navTree),this.navTreeClickObserver.watch(this.navTree),this.navTreeKeyPressObserver.watch(this.navTree))},e.prototype.activateNavItemByLabel=function(e){var t;null===(t=this.navTree)||void 0===t||t.activateNodeByLabel(e)},e.prototype.activateNavItemByUuid=function(e){var t;null===(t=this.navTree)||void 0===t||t.activateNodeByUuid(e)},e.prototype.deactivateNavItem=function(){var e;null===(e=this.navTree)||void 0===e||e.deactivateNode()},e.prototype.unsubscribe=function(){this.navTreeHtmlObserver.unwatch(),this.navTreeClickObserver.unwatch(),this.navTreeKeyPressObserver.unwatch()},e}();t.default=s},607:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=n(r(124));"undefined"!=typeof window&&(window.HtmlDomNavigator=new o.default)},522:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0});var n=r(996);t.default=function(){var e=this;this.observable=null,this.watch=function(t){e.unwatch(),e.observable=t,window.onclick=e.onClickEventDetected},this.onClickEventDetected=function(t){var r,o=t.target.closest('[data-nav="'+n.NavItemTypes.Item+'"]');o&&(null===(r=e.observable)||void 0===r||r.activateNodeByUuid(o.dataset[n.NavItemDataAttrs.NavUuid]))},this.unwatch=function(){window.onclick=null,e.observable=null}}},105:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0});t.default=function(){var e=this;this.observer=null,this.observable=null,this.observerConfig={attributes:!0,childList:!0,subtree:!0,attributeFilter:["data-nav"]},this.watch=function(t){e.unwatch(),e.observable=t,e.observer=new MutationObserver(e.onHtmlChangeDetected),e.observer.observe(e.observable.elem,e.observerConfig)},this.onHtmlChangeDetected=function(){var t;null===(t=e.observable)||void 0===t||t.rebuild()},this.unwatch=function(){var t;null===(t=e.observer)||void 0===t||t.disconnect(),e.observer=null,e.observable=null}}},876:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0});t.default=function(){var e=this;this.observable=null,this.controls={ArrowUp:function(){var t;return null===(t=e.observable)||void 0===t?void 0:t.up()},ArrowDown:function(){var t;return null===(t=e.observable)||void 0===t?void 0:t.down()},ArrowLeft:function(){var t;return null===(t=e.observable)||void 0===t?void 0:t.left()},ArrowRight:function(){var t;return null===(t=e.observable)||void 0===t?void 0:t.right()}},this.watch=function(t){e.unwatch(),e.observable=t,window.onkeydown=e.onKeyEventDetected},this.onKeyEventDetected=function(t){var r=e.controls[t.key];r&&r()},this.unwatch=function(){window.onkeydown=null,e.observable=null}}},614:(e,t,r)=>{r.r(t),r.d(t,{NIL:()=>P,parse:()=>y,stringify:()=>v,v1:()=>p,v3:()=>A,v4:()=>U,v5:()=>M,validate:()=>u,version:()=>j});var n="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto),o=new Uint8Array(16);function i(){if(!n)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return n(o)}const a=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,u=function(e){return"string"==typeof e&&a.test(e)};for(var s=[],l=0;l<256;++l)s.push((l+256).toString(16).substr(1));const v=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=(s[e[t+0]]+s[e[t+1]]+s[e[t+2]]+s[e[t+3]]+"-"+s[e[t+4]]+s[e[t+5]]+"-"+s[e[t+6]]+s[e[t+7]]+"-"+s[e[t+8]]+s[e[t+9]]+"-"+s[e[t+10]]+s[e[t+11]]+s[e[t+12]]+s[e[t+13]]+s[e[t+14]]+s[e[t+15]]).toLowerCase();if(!u(r))throw TypeError("Stringified UUID is invalid");return r};var c,d,f=0,h=0;const p=function(e,t,r){var n=t&&r||0,o=t||new Array(16),a=(e=e||{}).node||c,u=void 0!==e.clockseq?e.clockseq:d;if(null==a||null==u){var s=e.random||(e.rng||i)();null==a&&(a=c=[1|s[0],s[1],s[2],s[3],s[4],s[5]]),null==u&&(u=d=16383&(s[6]<<8|s[7]))}var l=void 0!==e.msecs?e.msecs:Date.now(),p=void 0!==e.nsecs?e.nsecs:h+1,y=l-f+(p-h)/1e4;if(y<0&&void 0===e.clockseq&&(u=u+1&16383),(y<0||l>f)&&void 0===e.nsecs&&(p=0),p>=1e4)throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");f=l,h=p,d=u;var b=(1e4*(268435455&(l+=122192928e5))+p)%4294967296;o[n++]=b>>>24&255,o[n++]=b>>>16&255,o[n++]=b>>>8&255,o[n++]=255&b;var m=l/4294967296*1e4&268435455;o[n++]=m>>>8&255,o[n++]=255&m,o[n++]=m>>>24&15|16,o[n++]=m>>>16&255,o[n++]=u>>>8|128,o[n++]=255&u;for(var N=0;N<6;++N)o[n+N]=a[N];return t||v(o)},y=function(e){if(!u(e))throw TypeError("Invalid UUID");var t,r=new Uint8Array(16);return r[0]=(t=parseInt(e.slice(0,8),16))>>>24,r[1]=t>>>16&255,r[2]=t>>>8&255,r[3]=255&t,r[4]=(t=parseInt(e.slice(9,13),16))>>>8,r[5]=255&t,r[6]=(t=parseInt(e.slice(14,18),16))>>>8,r[7]=255&t,r[8]=(t=parseInt(e.slice(19,23),16))>>>8,r[9]=255&t,r[10]=(t=parseInt(e.slice(24,36),16))/1099511627776&255,r[11]=t/4294967296&255,r[12]=t>>>24&255,r[13]=t>>>16&255,r[14]=t>>>8&255,r[15]=255&t,r};function b(e,t,r){function n(e,n,o,i){if("string"==typeof e&&(e=function(e){e=unescape(encodeURIComponent(e));for(var t=[],r=0;r<e.length;++r)t.push(e.charCodeAt(r));return t}(e)),"string"==typeof n&&(n=y(n)),16!==n.length)throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");var a=new Uint8Array(16+e.length);if(a.set(n),a.set(e,n.length),(a=r(a))[6]=15&a[6]|t,a[8]=63&a[8]|128,o){i=i||0;for(var u=0;u<16;++u)o[i+u]=a[u];return o}return v(a)}try{n.name=e}catch(e){}return n.DNS="6ba7b810-9dad-11d1-80b4-00c04fd430c8",n.URL="6ba7b811-9dad-11d1-80b4-00c04fd430c8",n}function m(e){return 14+(e+64>>>9<<4)+1}function N(e,t){var r=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(r>>16)<<16|65535&r}function w(e,t,r,n,o,i){return N((a=N(N(t,e),N(n,i)))<<(u=o)|a>>>32-u,r);var a,u}function g(e,t,r,n,o,i,a){return w(t&r|~t&n,e,t,o,i,a)}function I(e,t,r,n,o,i,a){return w(t&n|r&~n,e,t,o,i,a)}function T(e,t,r,n,o,i,a){return w(t^r^n,e,t,o,i,a)}function O(e,t,r,n,o,i,a){return w(r^(t|~n),e,t,o,i,a)}const A=b("v3",48,(function(e){if("string"==typeof e){var t=unescape(encodeURIComponent(e));e=new Uint8Array(t.length);for(var r=0;r<t.length;++r)e[r]=t.charCodeAt(r)}return function(e){for(var t=[],r=32*e.length,n="0123456789abcdef",o=0;o<r;o+=8){var i=e[o>>5]>>>o%32&255,a=parseInt(n.charAt(i>>>4&15)+n.charAt(15&i),16);t.push(a)}return t}(function(e,t){e[t>>5]|=128<<t%32,e[m(t)-1]=t;for(var r=1732584193,n=-271733879,o=-1732584194,i=271733878,a=0;a<e.length;a+=16){var u=r,s=n,l=o,v=i;r=g(r,n,o,i,e[a],7,-680876936),i=g(i,r,n,o,e[a+1],12,-389564586),o=g(o,i,r,n,e[a+2],17,606105819),n=g(n,o,i,r,e[a+3],22,-1044525330),r=g(r,n,o,i,e[a+4],7,-176418897),i=g(i,r,n,o,e[a+5],12,1200080426),o=g(o,i,r,n,e[a+6],17,-1473231341),n=g(n,o,i,r,e[a+7],22,-45705983),r=g(r,n,o,i,e[a+8],7,1770035416),i=g(i,r,n,o,e[a+9],12,-1958414417),o=g(o,i,r,n,e[a+10],17,-42063),n=g(n,o,i,r,e[a+11],22,-1990404162),r=g(r,n,o,i,e[a+12],7,1804603682),i=g(i,r,n,o,e[a+13],12,-40341101),o=g(o,i,r,n,e[a+14],17,-1502002290),r=I(r,n=g(n,o,i,r,e[a+15],22,1236535329),o,i,e[a+1],5,-165796510),i=I(i,r,n,o,e[a+6],9,-1069501632),o=I(o,i,r,n,e[a+11],14,643717713),n=I(n,o,i,r,e[a],20,-373897302),r=I(r,n,o,i,e[a+5],5,-701558691),i=I(i,r,n,o,e[a+10],9,38016083),o=I(o,i,r,n,e[a+15],14,-660478335),n=I(n,o,i,r,e[a+4],20,-405537848),r=I(r,n,o,i,e[a+9],5,568446438),i=I(i,r,n,o,e[a+14],9,-1019803690),o=I(o,i,r,n,e[a+3],14,-187363961),n=I(n,o,i,r,e[a+8],20,1163531501),r=I(r,n,o,i,e[a+13],5,-1444681467),i=I(i,r,n,o,e[a+2],9,-51403784),o=I(o,i,r,n,e[a+7],14,1735328473),r=T(r,n=I(n,o,i,r,e[a+12],20,-1926607734),o,i,e[a+5],4,-378558),i=T(i,r,n,o,e[a+8],11,-2022574463),o=T(o,i,r,n,e[a+11],16,1839030562),n=T(n,o,i,r,e[a+14],23,-35309556),r=T(r,n,o,i,e[a+1],4,-1530992060),i=T(i,r,n,o,e[a+4],11,1272893353),o=T(o,i,r,n,e[a+7],16,-155497632),n=T(n,o,i,r,e[a+10],23,-1094730640),r=T(r,n,o,i,e[a+13],4,681279174),i=T(i,r,n,o,e[a],11,-358537222),o=T(o,i,r,n,e[a+3],16,-722521979),n=T(n,o,i,r,e[a+6],23,76029189),r=T(r,n,o,i,e[a+9],4,-640364487),i=T(i,r,n,o,e[a+12],11,-421815835),o=T(o,i,r,n,e[a+15],16,530742520),r=O(r,n=T(n,o,i,r,e[a+2],23,-995338651),o,i,e[a],6,-198630844),i=O(i,r,n,o,e[a+7],10,1126891415),o=O(o,i,r,n,e[a+14],15,-1416354905),n=O(n,o,i,r,e[a+5],21,-57434055),r=O(r,n,o,i,e[a+12],6,1700485571),i=O(i,r,n,o,e[a+3],10,-1894986606),o=O(o,i,r,n,e[a+10],15,-1051523),n=O(n,o,i,r,e[a+1],21,-2054922799),r=O(r,n,o,i,e[a+8],6,1873313359),i=O(i,r,n,o,e[a+15],10,-30611744),o=O(o,i,r,n,e[a+6],15,-1560198380),n=O(n,o,i,r,e[a+13],21,1309151649),r=O(r,n,o,i,e[a+4],6,-145523070),i=O(i,r,n,o,e[a+11],10,-1120210379),o=O(o,i,r,n,e[a+2],15,718787259),n=O(n,o,i,r,e[a+9],21,-343485551),r=N(r,u),n=N(n,s),o=N(o,l),i=N(i,v)}return[r,n,o,i]}(function(e){if(0===e.length)return[];for(var t=8*e.length,r=new Uint32Array(m(t)),n=0;n<t;n+=8)r[n>>5]|=(255&e[n/8])<<n%32;return r}(e),8*e.length))})),U=function(e,t,r){var n=(e=e||{}).random||(e.rng||i)();if(n[6]=15&n[6]|64,n[8]=63&n[8]|128,t){r=r||0;for(var o=0;o<16;++o)t[r+o]=n[o];return t}return v(n)};function _(e,t,r,n){switch(e){case 0:return t&r^~t&n;case 1:return t^r^n;case 2:return t&r^t&n^r&n;case 3:return t^r^n}}function C(e,t){return e<<t|e>>>32-t}const M=b("v5",80,(function(e){var t=[1518500249,1859775393,2400959708,3395469782],r=[1732584193,4023233417,2562383102,271733878,3285377520];if("string"==typeof e){var n=unescape(encodeURIComponent(e));e=[];for(var o=0;o<n.length;++o)e.push(n.charCodeAt(o))}else Array.isArray(e)||(e=Array.prototype.slice.call(e));e.push(128);for(var i=e.length/4+2,a=Math.ceil(i/16),u=new Array(a),s=0;s<a;++s){for(var l=new Uint32Array(16),v=0;v<16;++v)l[v]=e[64*s+4*v]<<24|e[64*s+4*v+1]<<16|e[64*s+4*v+2]<<8|e[64*s+4*v+3];u[s]=l}u[a-1][14]=8*(e.length-1)/Math.pow(2,32),u[a-1][14]=Math.floor(u[a-1][14]),u[a-1][15]=8*(e.length-1)&4294967295;for(var c=0;c<a;++c){for(var d=new Uint32Array(80),f=0;f<16;++f)d[f]=u[c][f];for(var h=16;h<80;++h)d[h]=C(d[h-3]^d[h-8]^d[h-14]^d[h-16],1);for(var p=r[0],y=r[1],b=r[2],m=r[3],N=r[4],w=0;w<80;++w){var g=Math.floor(w/20),I=C(p,5)+_(g,y,b,m)+N+t[g]+d[w]>>>0;N=m,m=b,b=C(y,30)>>>0,y=p,p=I}r[0]=r[0]+p>>>0,r[1]=r[1]+y>>>0,r[2]=r[2]+b>>>0,r[3]=r[3]+m>>>0,r[4]=r[4]+N>>>0}return[r[0]>>24&255,r[0]>>16&255,r[0]>>8&255,255&r[0],r[1]>>24&255,r[1]>>16&255,r[1]>>8&255,255&r[1],r[2]>>24&255,r[2]>>16&255,r[2]>>8&255,255&r[2],r[3]>>24&255,r[3]>>16&255,r[3]>>8&255,255&r[3],r[4]>>24&255,r[4]>>16&255,r[4]>>8&255,255&r[4]]})),P="00000000-0000-0000-0000-000000000000",j=function(e){if(!u(e))throw TypeError("Invalid UUID");return parseInt(e.substr(14,1),16)}}},t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={exports:{}};return e[n].call(o.exports,o,o.exports,r),o.exports}r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r(607)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,