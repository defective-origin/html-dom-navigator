(()=>{"use strict";var e={569:function(e,t,i){var n=this&&this.__createBinding||(Object.create?function(e,t,i,n){void 0===n&&(n=i),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[i]}})}:function(e,t,i,n){void 0===n&&(n=i),e[n]=t[i]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i in e)"default"!==i&&Object.prototype.hasOwnProperty.call(e,i)&&n(t,e,i);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});var r=a(i(996)),l=function(){function e(e){this.nodeMapByLabel={},this.activeNode=null,this.elem=e,this.rootNode=new r.default(e),this.build(e,this.rootNode),this.activateNode(this.rootNode)}return e.prototype.build=function(e,t){for(var i=0;i<e.children.length;i+=1){var n=e.children[i];if(r.default.hasNavTypeAttribute(n)){var o=new r.default(n,t);this.nodeMapByLabel[o.label]=o,o.type!==r.NavItemTypes.Item&&this.build(n,o)}else this.build(n,t)}},e.prototype.rebuild=function(){var e,t=null===(e=this.activeNode)||void 0===e?void 0:e.label;this.nodeMapByLabel={},this.rootNode=new r.default(this.elem),this.build(this.elem,this.rootNode),this.activateNode(t)},e.prototype.activateNode=function(e){var t,i,n,o=e instanceof r.default?e:this.nodeMapByLabel[e];if(o&&o.label!==(null===(t=this.activeNode)||void 0===t?void 0:t.label))if(o.hasType(r.NavItemTypes.Item))null===(i=this.activeNode)||void 0===i||i.deactivate(),this.activeNode=o,null===(n=this.activeNode)||void 0===n||n.activate();else{var a=o.getFirstChildNode();this.activateNode(a)}},e.prototype.deactivateNode=function(){var e;null===(e=this.activeNode)||void 0===e||e.deactivate(),this.activeNode=null},e.prototype.move=function(e,t,i){if(e&&e.parent){var n=e.parent;if(n.hasType(t)){var o=n.getChildNode(e.index+i);this.activateNode(o)}else this.move(n,t,i)}},e.prototype.up=function(){this.move(this.activeNode,r.NavItemTypes.Row,r.Offset.Prev)},e.prototype.down=function(){this.move(this.activeNode,r.NavItemTypes.Row,r.Offset.Next)},e.prototype.left=function(){this.move(this.activeNode,r.NavItemTypes.Column,r.Offset.Prev)},e.prototype.right=function(){this.move(this.activeNode,r.NavItemTypes.Column,r.Offset.Next)},e}();t.default=l},996:(e,t)=>{var i,n,o;Object.defineProperty(t,"__esModule",{value:!0}),t.Offset=t.NavItemDataAttrs=t.NavItemTypes=void 0,function(e){e.Row="row",e.Column="column",e.Item="item"}(i=t.NavItemTypes||(t.NavItemTypes={})),function(e){e.NavType="nav",e.NavLabel="navLabel",e.ActiveNavItem="activeNavItem"}(n=t.NavItemDataAttrs||(t.NavItemDataAttrs={})),function(e){e[e.Next=1]="Next",e[e.Prev=-1]="Prev"}(o=t.Offset||(t.Offset={}));var a=function(){function e(e,t,i,a){void 0===t&&(t=null),void 0===i&&(i=0),void 0===a&&(a=0),this.elem=e,this.parent=t,this.layer=i,this.index=a,this.children=[],t&&(this.index=t.children.length,this.layer=t.layer+o.Next||i,t.children.push(this)),this.elem.tabIndex=-1,this.elem.dataset[n.NavLabel]=this.elem.dataset[n.NavLabel]||"layer: "+this.layer+" Index: "+this.index}return Object.defineProperty(e.prototype,"type",{get:function(){return this.elem.dataset[n.NavType]||null},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"label",{get:function(){return this.elem.dataset[n.NavLabel]||null},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isActive",{get:function(){return Boolean(this.elem.dataset[n.ActiveNavItem])},enumerable:!1,configurable:!0}),e.prototype.hasType=function(e){return this.type===e},e.prototype.getChildNode=function(e){return this.children[e]||null},e.prototype.getFirstChildNode=function(){return this.getChildNode(0)},e.hasNavTypeAttribute=function(e){return Boolean(e.dataset[n.NavType])},e.prototype.activate=function(){this.isActive||this.type!==i.Item||(this.elem.dataset[n.ActiveNavItem]="true",this.elem.focus(),this.elem.scrollIntoView({block:"center",inline:"center",behavior:"smooth"}))},e.prototype.deactivate=function(){this.isActive&&(this.elem.blur(),delete this.elem.dataset[n.ActiveNavItem])},e}();t.default=a},124:function(e,t,i){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=n(i(569)),a=n(i(105)),r=n(i(522)),l=n(i(876)),s=function(){function e(){this.navTree=null,this.navTreeHtmlObserver=new a.default,this.navTreeClickObserver=new r.default,this.navTreeKeyPressObserver=new l.default}return e.prototype.observe=function(e){e.isEqualNode(this.navTree&&this.navTree.elem)||(this.navTree=new o.default(e),this.navTreeHtmlObserver.watch(this.navTree),this.navTreeClickObserver.watch(this.navTree),this.navTreeKeyPressObserver.watch(this.navTree))},e.prototype.activateNavItem=function(e){var t;null===(t=this.navTree)||void 0===t||t.activateNode(e)},e.prototype.deactivateNavItem=function(){var e;null===(e=this.navTree)||void 0===e||e.deactivateNode()},e}();t.default=s},607:function(e,t,i){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=n(i(124));"undefined"!=typeof window&&(window.HtmlDomNavigator=new o.default)},522:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0});var n=i(996);t.default=function(){var e=this;this.observable=null,this.watch=function(t){e.unwatch(),e.observable=t,window.onclick=e.onClickEventDetected},this.onClickEventDetected=function(t){var i,o=t.target.closest('[data-nav="'+n.NavItemTypes.Item+'"]');o&&(null===(i=e.observable)||void 0===i||i.activateNode(o.dataset[n.NavItemDataAttrs.NavLabel]))},this.unwatch=function(){window.onclick=null,e.observable=null}}},105:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0});t.default=function(){var e=this;this.observer=null,this.observable=null,this.observerConfig={attributes:!0,childList:!0,subtree:!0,attributeFilter:["data-nav"]},this.watch=function(t){e.unwatch(),e.observable=t,e.observer=new MutationObserver(e.onHtmlChangeDetected),e.observer.observe(e.observable.elem,e.observerConfig)},this.onHtmlChangeDetected=function(){var t;null===(t=e.observable)||void 0===t||t.rebuild()},this.unwatch=function(){var t;null===(t=e.observer)||void 0===t||t.disconnect(),e.observer=null,e.observable=null}}},876:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0});t.default=function(){var e=this;this.observable=null,this.controls={ArrowUp:function(){var t;return null===(t=e.observable)||void 0===t?void 0:t.up()},ArrowDown:function(){var t;return null===(t=e.observable)||void 0===t?void 0:t.down()},ArrowLeft:function(){var t;return null===(t=e.observable)||void 0===t?void 0:t.left()},ArrowRight:function(){var t;return null===(t=e.observable)||void 0===t?void 0:t.up()}},this.watch=function(t){e.unwatch(),e.observable=t,window.onkeypress=e.onKeyEventDetected},this.onKeyEventDetected=function(t){var i=e.controls[t.key];i&&i()},this.unwatch=function(){window.onkeypress=null,e.observable=null}}}},t={};!function i(n){if(t[n])return t[n].exports;var o=t[n]={exports:{}};return e[n].call(o.exports,o,o.exports,i),o.exports}(607)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,